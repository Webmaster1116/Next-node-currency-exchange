{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport Axios from 'axios';\nimport UserContext from '../../context/UserContext';\nimport Loader from '../Loader';\nimport Cookies from 'js-cookie';\nimport getProfile from '../genericFunctions/getProfile';\nimport getAllTransactions from '../genericFunctions/getAllTransactions';\nimport sendMail from '../genericFunctions/sendMail';\nimport loggedUser from '../genericFunctions/loggedUser';\nimport { confirmAlert } from 'react-confirm-alert';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nconst OperationHistory = props => {\n  const context = useContext(UserContext);\n  const token = Cookies.get('token');\n  const {\n    0: state,\n    1: setState\n  } = useState('');\n  const {\n    0: profileDetails,\n    1: setProfileDetails\n  } = useState('');\n\n  const init = async () => {\n    const id = await loggedUser(token);\n    const user = {\n      user: {\n        id: id\n      }\n    }; // console.log(user, 'xxxxxx');\n    // const data = await getAllTransactions(token, user);\n\n    const profile = await getProfile(token); // console.log(data);\n    // setState(data);\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  const handleSubmit = (id, amountReceive, amountToPay, currencyTo, currencyFrom, status, operation) => {\n    confirmAlert({\n      title: 'Confirmar para enviar',\n      message: '¿Estás seguro de que quieres hacer esto?',\n      buttons: [{\n        label: 'Si',\n        onClick: async () => {\n          await changeStatus(token, id, amountReceive, amountToPay, currencyTo, currencyFrom, status);\n          await sendMail(token, operation.profileDetails.email, 'verify', operation);\n          NotificationManager.info('Estado cambiado', 'Title here');\n          init();\n        }\n      }, {\n        label: 'No',\n        onClick: () => console.log('Haga clic en no')\n      }]\n    });\n  };\n\n  if (state === '') {\n    return __jsx(\"div\", {\n      className: \"form-container w-100\"\n    }, __jsx(Loader, null));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(NotificationContainer, null), __jsx(\"div\", {\n    className: \"jsx-136640067\" + \" \" + 'container main mt-5'\n  }, __jsx(\"div\", {\n    className: \"jsx-136640067\" + \" \" + 'row head'\n  }, __jsx(\"div\", {\n    className: \"jsx-136640067\" + \" \" + 'col-1'\n  }), __jsx(\"div\", {\n    className: \"jsx-136640067\" + \" \" + 'col-2'\n  }, \"Nombre del banco\"), __jsx(\"div\", {\n    className: \"jsx-136640067\" + \" \" + 'col-2'\n  }, \"N\\xFAmero de cuenta\"), __jsx(\"div\", {\n    className: \"jsx-136640067\" + \" \" + 'col-2'\n  }, \"Cuenta a pagar\"), __jsx(\"div\", {\n    className: \"jsx-136640067\" + \" \" + 'col-2'\n  }, \"Cantidad que recibir\\xE1s\"), __jsx(\"div\", {\n    className: \"jsx-136640067\" + \" \" + 'col-2'\n  }, \"Estado\")), __jsx(\"hr\", {\n    className: \"jsx-136640067\" + \" \" + 'hr'\n  }), state.map((operation, index) => {\n    // console.log(operation);\n    return __jsx(React.Fragment, {\n      key: index\n    }, __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'row'\n    }, __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'col-1'\n    }, index + 1), __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'col-2'\n    }, operation.bankDetails.bankName), __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'col-2'\n    }, operation.bankDetails.accountNumber), __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'col-1'\n    }, operation.transaction.amountToPay), __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'col-1'\n    }, operation.transaction.currencyTo), __jsx(\"div\", {\n      style: {\n        overflow: 'hidden'\n      },\n      className: \"jsx-136640067\" + \" \" + 'col-1'\n    }, operation.transaction.amountReceive), __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'col-1'\n    }, operation.transaction.currencyFrom), operation.transaction.status === 'Pago pendiente' ? __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'col-1'\n    }, operation.transaction.status), __jsx(\"button\", {\n      onClick: () => handleSubmit(operation._id, operation.transaction.amountReceive, operation.transaction.amountToPay, operation.transaction.currencyTo, operation.transaction.currencyFrom, 'Cantidad recibida', operation),\n      className: \"jsx-136640067\" + \" \" + 'btn btn-dark'\n    }, \"verificar pago\")) : __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'col-2'\n    }, operation.transaction.status)), __jsx(\"hr\", {\n      className: \"jsx-136640067\"\n    }));\n  })), __jsx(_JSXStyle, {\n    id: \"136640067\"\n  }, [\"div.jsx-136640067{color:white;font-size:15px;}\", \".head.jsx-136640067 div.jsx-136640067{font-size:18px;}\", \"hr.jsx-136640067{background:white;}\", \".main.jsx-136640067{margin:0 auto;padding-top:80px;width:100%;height:120vh;color:white;}\", \".scrollbar.jsx-136640067{margin-left:30px;float:left;height:300px;max-height:600px;width:65px;background:#f5f5f5;overflow-y:scroll;margin-bottom:25px;}\", \"#style-3.jsx-136640067::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,0.3);background-color:#f5f5f5;}\", \"#style-3.jsx-136640067::-webkit-scrollbar{width:6px;background-color:#f5f5f5;}\", \"#style-3.jsx-136640067::-webkit-scrollbar-thumb{background-color:#000000;border-width:1px;}\"]));\n};\n\nexport default OperationHistory;\n\nconst changeStatus = async (token, id, amountReceive, amountToPay, currencyTo, currencyFrom, status) => {\n  const body = {\n    transaction: {\n      amountReceive,\n      amountToPay,\n      currencyTo,\n      currencyFrom,\n      status\n    }\n  };\n  const header = {\n    headers: {\n      'x-auth-token': token\n    }\n  };\n  const res = await Axios.put('https://api.moni.pe/api/operations/' + id, body, header);\n  return res.data;\n};","map":null,"metadata":{},"sourceType":"module"}