{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: block;\\n  margin: 0 auto;\\n  border-color: red;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { css } from \"@emotion/core\";\nimport BarLoader from \"react-spinners/PulseLoader\"; // Can be a string as well. Need to ensure each key-value pair ends with ;\n\nvar override = css(_templateObject());\n\nvar AwesomeComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(AwesomeComponent, _React$Component);\n\n  var _super = _createSuper(AwesomeComponent);\n\n  function AwesomeComponent(props) {\n    var _this;\n\n    _classCallCheck(this, AwesomeComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(AwesomeComponent, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"sweet-loading\"\n      }, __jsx(BarLoader, {\n        css: override,\n        size: 10,\n        color: \"#77cfeb\",\n        loading: this.state.loading\n      }));\n    }\n  }]);\n\n  return AwesomeComponent;\n}(React.Component);\n\nexport default AwesomeComponent;","map":null,"metadata":{},"sourceType":"module"}