{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport Axios from 'axios';\nimport UserContext from '../../context/AdminContext';\nimport { confirmAlert } from 'react-confirm-alert';\nimport TopNavbar from './topNavbar';\nimport Cookies from 'js-cookie';\nimport AlertContext from '../../context/alert/alertContext';\nimport sendMail from '../genericFunctions/sendMail';\nimport getProfile from '../genericFunctions/getProfile';\nimport ViewPopup from './viewPopup';\nimport EditPopup from './editPopup';\nimport ExchangeModal from './exchangeRatePopup';\nimport DeletePopup from './deletePopup';\nimport moment from 'moment';\n\nconst getData = async token => {\n  const header = {\n    headers: {\n      'x-auth-token': token\n    }\n  };\n  const data = await Axios.get('https://api.moni.pe/api/agent/auth', header);\n  return data.data;\n};\n\nconst getUserCount = async token => {\n  const header = {\n    headers: {\n      'x-auth-token': token\n    }\n  };\n  const data = await Axios.get('https://api.moni.pe/api/users/count', header);\n  return data.data;\n};\n\nconst agentStatusChange = async (token, id, status) => {\n  const header = {\n    headers: {\n      'x-auth-token': token\n    }\n  };\n  const stat = status ? 'online' : 'offline';\n  const url = 'https://api.moni.pe/api/agent/' + stat + '/' + id;\n  const data = await Axios.get(url, header);\n  return data.data;\n};\n\nconst dashboard = props => {\n  const context = useContext(UserContext);\n  const {\n    0: state,\n    1: setState\n  } = useState([]);\n  const alertContext = useContext(AlertContext);\n  const {\n    setAlert,\n    alerts\n  } = alertContext;\n  const {\n    0: details,\n    1: setDetails\n  } = useState('');\n  const token = Cookies.get('adminToken');\n  const token2 = Cookies.get('agentToken');\n  const {\n    0: viewModal,\n    1: setViewModal\n  } = useState(false);\n  const {\n    0: editModal,\n    1: setEditModal\n  } = useState(false);\n  const {\n    0: deleteModal,\n    1: setDeleteModal\n  } = useState(false);\n  const {\n    0: exchangeModal,\n    1: setExchangeModal\n  } = useState(false);\n  const {\n    0: selected,\n    1: setSelected\n  } = useState('');\n  const {\n    0: userCount,\n    1: setUserCount\n  } = useState(100);\n  const {\n    0: transactionCount,\n    1: setTransactionCount\n  } = useState(100);\n  const {\n    0: agentColor,\n    1: setAgentColor\n  } = useState('red');\n  const {\n    0: agentStatus,\n    1: setAgentStatus\n  } = useState(false);\n  const {\n    0: agentId,\n    1: setAgentId\n  } = useState('');\n  const {\n    0: agentBtnName,\n    1: setAgentBtnName\n  } = useState('desconectado');\n  const {\n    0: width,\n    1: setWidth\n  } = useState(0);\n  const {\n    0: agentEnable,\n    1: setAgentEnable\n  } = useState('');\n  const {\n    0: admin,\n    1: setAdmin\n  } = useState(false);\n  const {\n    0: topbar,\n    1: setTopBar\n  } = useState({\n    display: 'none',\n    marginTop: '30px'\n  });\n  const {\n    0: comissionDollars,\n    1: setComissionDollars\n  } = useState(0);\n  const {\n    0: comissionSoles,\n    1: setComissionSoles\n  } = useState(0);\n  const {\n    0: totalComm,\n    1: setTotalComm\n  } = useState(0);\n  const {\n    0: totalCommSoles,\n    1: setTotalCommSoles\n  } = useState(0);\n  const {\n    0: limit,\n    1: setLimit\n  } = useState(10);\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const init = async () => {\n    if (token !== undefined || token2 !== undefined) {\n      if (token2 === undefined) {\n        try {\n          setLoading(true);\n          const data = await get_all_transactions(Cookies.get('adminToken'), page, limit);\n          const users = await getUserCount(Cookies.get('adminToken'));\n          setUserCount(users);\n          setAdmin(true);\n          setState(data);\n          const comm = await get_admin_commission(Cookies.get('adminToken'));\n          setTransactionCount(data.length);\n          setTotalComm(comm.dollar);\n          setTotalCommSoles(comm.soles);\n          setLoading(false);\n        } catch (error) {\n          console.log(error);\n          setAlert('Algo salió mal', 'danger'); // const res = Cookies.remove(\"adminToken\");\n          // const res2 = Cookies.remove(\"agentToken\");\n          // window.location.href = \"/admin_login\";\n        }\n      } else {\n        try {\n          setLoading(true);\n          const users = await getUserCount(Cookies.get('agentToken'));\n          setUserCount(users);\n          const agentData = await getData(Cookies.get('agentToken'));\n          const agentid = agentData._id;\n          const data = await get_agent_transactions(Cookies.get('agentToken'), agentData._id, page, limit);\n          const comm = await get_agent_commission(Cookies.get('agentToken'), agentData._id);\n          setAgentId(agentData._id);\n          setAgentStatus(agentData.online);\n          setAgentEnable(agentData.enable);\n          setComissionDollars(agentData.commissionDollars);\n          setComissionSoles(agentData.commissionSoles);\n          setAgentColor(agentData.online ? 'green' : 'red');\n          setAgentBtnName(agentData.online ? 'en línea' : 'Desconectado');\n          setState(data);\n          let d1 = data;\n          setTransactionCount(d1.length);\n          setTotalComm(comm.dollar);\n          setTotalCommSoles(comm.soles);\n          setLoading(false);\n        } catch (error) {\n          console.log(error);\n          setAlert('Algo salió mal', 'danger');\n          const res = Cookies.remove('adminToken');\n          const res2 = Cookies.remove('agentToken');\n          window.location.href = '/admin_login';\n        }\n      }\n    } else {\n      window.location.href = '/admin_login';\n    }\n  };\n\n  useEffect(() => {\n    init();\n  }, [page]);\n  useEffect(() => {\n    setWidth(window.innerWidth);\n\n    if (window.innerWidth > 480) {\n      setTopBar({\n        display: 'inherit'\n      });\n    } else {\n      setTopBar({\n        display: 'none',\n        marginTop: '30px'\n      });\n    }\n\n    window.addEventListener('resize', handleResize);\n    init();\n    window.addEventListener('beforeunload', ev => {\n      ev.preventDefault();\n      return '¿Estás seguro de que quieres cerrar?';\n    });\n  }, []);\n\n  const handleRefresh = () => {\n    init();\n  };\n\n  const setAgent = async () => {\n    const res = await agentStatusChange(Cookies.get('agentToken'), agentId, !agentStatus);\n    setAgentStatus(res.online);\n    setAgentColor(res.online ? 'green' : 'red');\n    setAgentBtnName(res.online ? 'en línea' : 'Desconectado');\n  };\n\n  const handleResize = () => {\n    setWidth(window.innerWidth);\n\n    if (window.innerWidth > 480) {\n      setTopBar({\n        display: 'inherit'\n      });\n    } else {\n      setTopBar({\n        display: 'none',\n        marginTop: '30px'\n      });\n    }\n  };\n\n  if (loading === true) {\n    return __jsx(\"div\", {\n      className: \"loader\"\n    }, \"Cargando...\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    id: \"topnav-admin\",\n    className: \"page-section bg-gray pb-20 pt-70 topnav-page\",\n    style: topbar\n  }, __jsx(\"div\", {\n    className: \"relative container align-left topbar\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"ul\", {\n    className: \"nav nav-tabs tpl-tabs animate\"\n  }, __jsx(\"li\", {\n    className: \"\"\n  }, __jsx(\"div\", {\n    className: \"alt-service-item black mt-30  align-left\"\n  }, __jsx(\"div\", {\n    className: \"alt-service-icon\"\n  }, __jsx(\"i\", {\n    className: \"fa  fa-users fa-2x\"\n  })), __jsx(\"div\", {\n    className: \"count-number orange\"\n  }, userCount), __jsx(\"div\", {\n    className: \"count-descr\"\n  }, __jsx(\"h3\", {\n    className: \"bold mt-0 mb-0\"\n  }, \"usuarios\")))), __jsx(\"li\", {\n    className: \"\"\n  }, __jsx(\"div\", {\n    className: \"alt-service-item black mt-30  align-left\"\n  }, __jsx(\"div\", {\n    className: \"alt-service-icon\"\n  }, __jsx(\"i\", {\n    className: \"fa  fa-exchange fa-2x\"\n  })), __jsx(\"div\", {\n    className: \"count-number orange\"\n  }, parseFloat(totalCommSoles).toFixed(2)), __jsx(\"div\", {\n    className: \"count-descr\"\n  }, __jsx(\"h3\", {\n    className: \"bold mt-0 mb-0\"\n  }, \"cambiados S./\")))), __jsx(\"li\", {\n    className: \"active\"\n  }, __jsx(\"div\", {\n    className: \"alt-service-item black mt-30  align-left\"\n  }, __jsx(\"div\", {\n    className: \"alt-service-icon\"\n  }, __jsx(\"i\", {\n    className: \"fa  fa-dollar fa-2x\"\n  })), __jsx(\"div\", {\n    className: \"count-number orange\"\n  }, parseFloat(totalComm).toFixed(2)), __jsx(\"div\", {\n    className: \"count-descr\"\n  }, __jsx(\"h3\", {\n    className: \"bold mt-0 mb-0\"\n  }, \"cambiados $\")))), agentId ? __jsx(\"li\", {\n    className: \"\"\n  }, __jsx(\"div\", {\n    className: \"alt-service-item black mt-30  align-left\"\n  }, __jsx(\"button\", {\n    onClick: setAgent,\n    className: \"btn btn-mod btn-color btn-border-w btn-medium btn-circle bold\"\n  }, agentBtnName, ' ', __jsx(\"i\", {\n    style: {\n      color: agentColor\n    },\n    className: \"fa fa-circle\"\n  })), __jsx(\"br\", null), __jsx(\"span\", {\n    className: \"text-center commission-text mt-2\"\n  }, \"Por pagar a Moni \", __jsx(\"br\", null), ' $ ', parseFloat(comissionDollars).toFixed(3), '   ', ' S./ ', parseFloat(comissionSoles).toFixed(3)), __jsx(\"br\", null))) : '', admin ? __jsx(\"li\", {\n    className: \"\"\n  }, __jsx(\"div\", {\n    className: \"alt-service-item black mt-30  align-left\"\n  }, __jsx(\"button\", {\n    onClick: () => {\n      setExchangeModal(!exchangeModal);\n      setEditModal(false);\n      setViewModal(false);\n      setDeleteModal(false);\n    },\n    className: \"btn btn-mod btn-color btn-border-w btn-medium btn-circle bold\"\n  }, \"Tipo de Cambio\"))) : ''))))), exchangeModal ? __jsx(ExchangeModal, {\n    setExchangeModal: setExchangeModal,\n    handleRefresh: handleRefresh\n  }) : '', viewModal ? __jsx(ViewPopup, {\n    setViewModal: setViewModal,\n    data: selected,\n    token: token || token2,\n    handleRefresh: handleRefresh\n  }) : '', editModal ? __jsx(EditPopup, {\n    setEditModal: setEditModal,\n    data: selected,\n    token: token || token2,\n    handleRefresh: handleRefresh\n  }) : '', deleteModal ? __jsx(DeletePopup, {\n    setDeleteModal: setDeleteModal,\n    data: selected,\n    token: token || token2,\n    handleRefresh: handleRefresh\n  }) : '', __jsx(\"section\", {\n    className: \"jsx-2979882152\" + \" \" + 'page-section min-section pt-20'\n  }, __jsx(\"div\", {\n    className: \"jsx-2979882152\" + \" \" + 'container min-section'\n  }, __jsx(\"div\", {\n    className: \"jsx-2979882152\" + \" \" + 'row'\n  }, __jsx(\"div\", {\n    className: \"jsx-2979882152\" + \" \" + 'col-md-12'\n  }, __jsx(\"table\", {\n    className: \"jsx-2979882152\" + \" \" + 'table table-striped'\n  }, __jsx(\"tbody\", {\n    className: \"jsx-2979882152\"\n  }, __jsx(\"tr\", {\n    className: \"jsx-2979882152\"\n  }, __jsx(\"th\", {\n    className: \"jsx-2979882152\" + \" \" + 'hidden-xs'\n  }), __jsx(\"th\", {\n    className: \"jsx-2979882152\"\n  }, \"Operaci\\xF3n\"), __jsx(\"th\", {\n    className: \"jsx-2979882152\"\n  }, \"Agente\"), __jsx(\"th\", {\n    className: \"jsx-2979882152\"\n  }, \"Fecha\"), __jsx(\"th\", {\n    className: \"jsx-2979882152\"\n  }, \"Cantidad\"), __jsx(\"th\", {\n    className: \"jsx-2979882152\"\n  }, \"Resultado\"), __jsx(\"th\", {\n    className: \"jsx-2979882152\"\n  }, \"Estado\"), __jsx(\"th\", {\n    className: \"jsx-2979882152\"\n  }, \"Acci\\xF3n\")), state.map((operation, index) => {\n    let statusClass = '';\n    let iconClass = '';\n\n    if (operation.transaction.status === 'Pago pendiente') {\n      statusClass = 'pendiente';\n      iconClass = 'fa fa-lg  fa-exclamation-triangle';\n    } else if (operation.transaction.status === 'Pago realizado') {\n      statusClass = 'cnviar comprobante';\n      iconClass = 'fa fa-lg fa-mail-forward';\n    } else if (operation.transaction.status === 'Finalizado') {\n      statusClass = 'finalizado';\n      iconClass = 'fa fa-lg fa-check-circle';\n    }\n\n    return __jsx(React.Fragment, null, __jsx(\"tr\", {\n      className: \"jsx-2979882152\"\n    }, __jsx(\"td\", {\n      className: \"jsx-2979882152\"\n    }, __jsx(\"td\", {\n      className: \"jsx-2979882152\" + \" \" + 'orange'\n    }, operation.profileDetails.firstName, ' ', operation.profileDetails.lastName)), __jsx(\"td\", {\n      className: \"jsx-2979882152\" + \" \" + 'hidden-xs'\n    }, operation.transaction.currencyFrom === 'Soles' ? 'S./ ' : '$ ', ' ', '=>', ' ', operation.transaction.currencyTo === 'Soles' ? 'S./ ' : '$ '), __jsx(\"td\", {\n      className: \"jsx-2979882152\"\n    }, operation.agentName || '', \" \", __jsx(\"br\", {\n      className: \"jsx-2979882152\"\n    })), __jsx(\"td\", {\n      className: \"jsx-2979882152\"\n    }, moment(operation.date).format('DD/MM/YYYY hh:mm')), __jsx(\"td\", {\n      className: \"jsx-2979882152\"\n    }, operation.transaction.currencyTo === 'Soles' ? 'S./ ' : '$ ', parseFloat(operation.transaction.amountToPay).toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    })), __jsx(\"td\", {\n      className: \"jsx-2979882152\"\n    }, operation.transaction.currencyFrom === 'Soles' ? 'S./ ' : '$ ', parseFloat(operation.transaction.amountReceive).toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    })), __jsx(\"td\", {\n      className: \"jsx-2979882152\"\n    }, __jsx(\"div\", {\n      className: \"jsx-2979882152\" + \" \" + (statusClass || \"\")\n    }, __jsx(\"i\", {\n      className: \"jsx-2979882152\" + \" \" + (iconClass || \"\")\n    }), ' ', operation.transaction.status)), __jsx(\"td\", {\n      className: \"jsx-2979882152\"\n    }, __jsx(\"table\", {\n      className: \"jsx-2979882152\"\n    }, __jsx(\"tr\", {\n      className: \"jsx-2979882152\"\n    }, __jsx(\"td\", {\n      className: \"jsx-2979882152\" + \" \" + 'pr'\n    }, __jsx(\"button\", {\n      onClick: () => {\n        setSelected(operation);\n        setViewModal(!viewModal);\n        setEditModal(false);\n        setDeleteModal(false);\n      },\n      className: \"jsx-2979882152\" + \" \" + 'btn'\n    }, __jsx(\"i\", {\n      className: \"jsx-2979882152\" + \" \" + 'fa fa-lg  fa-eye'\n    }))), __jsx(\"td\", {\n      className: \"jsx-2979882152\" + \" \" + 'pr'\n    }, admin || agentEnable ? __jsx(React.Fragment, null, __jsx(\"button\", {\n      onClick: () => {\n        setSelected(operation);\n        setEditModal(!editModal);\n        setViewModal(false);\n        setDeleteModal(false);\n      },\n      className: \"jsx-2979882152\" + \" \" + 'btn'\n    }, __jsx(\"i\", {\n      className: \"jsx-2979882152\" + \" \" + 'fa fa-lg  fa-edit'\n    }))) : ''), __jsx(\"td\", {\n      className: \"jsx-2979882152\"\n    }, __jsx(\"button\", {\n      onClick: () => {\n        setSelected(operation);\n        setDeleteModal(!deleteModal);\n        setViewModal(false);\n        setEditModal(false);\n      },\n      className: \"jsx-2979882152\" + \" \" + 'btn'\n    }, __jsx(\"i\", {\n      className: \"jsx-2979882152\" + \" \" + 'fa fa-lg fa-trash-o'\n    }))))))));\n  }))), __jsx(\"div\", {\n    className: \"jsx-2979882152\" + \" \" + 'pagination'\n  }, __jsx(\"a\", {\n    href: \"\",\n    onClick: e => {\n      e.preventDefault();\n      page > 1 ? setPage(page - 1) : setPage(page);\n    },\n    className: \"jsx-2979882152\"\n  }, __jsx(\"i\", {\n    className: \"jsx-2979882152\" + \" \" + 'fa fa-angle-left'\n  })), __jsx(\"a\", {\n    href: \"\",\n    onClick: e => {\n      e.preventDefault();\n      setPage(page);\n    },\n    className: \"jsx-2979882152\" + \" \" + 'active'\n  }, page), __jsx(\"a\", {\n    href: \"\",\n    onClick: e => {\n      e.preventDefault();\n      setPage(page + 1);\n    },\n    className: \"jsx-2979882152\"\n  }, page + 1), __jsx(\"a\", {\n    href: \"\",\n    onClick: e => {\n      e.preventDefault();\n      setPage(page + 2);\n    },\n    className: \"jsx-2979882152\"\n  }, page + 2), __jsx(\"a\", {\n    className: \"jsx-2979882152\" + \" \" + 'no-active'\n  }, \"...\"), __jsx(\"a\", {\n    href: \"\",\n    onClick: e => {\n      e.preventDefault();\n      setPage(page + 1);\n    },\n    className: \"jsx-2979882152\"\n  }, __jsx(\"i\", {\n    className: \"jsx-2979882152\" + \" \" + 'fa fa-angle-right'\n  })))))), __jsx(_JSXStyle, {\n    id: \"2979882152\"\n  }, [\".min-section.jsx-2979882152{background:white;background-image:url('../images/bkg-neutro.jpg') !important;background-attachment:fixed;background-repeat:no-repeat;background-size:cover;}\", \".btn.jsx-2979882152{background:white;margin:0px;padding:0px;}\", \".min-section.jsx-2979882152{max-height:900vh;min-height:80vh;overflow:auto;white-space:nowrap;}\", \".page-section.jsx-2979882152{max-height:100vh;}\", \"h6.jsx-2979882152{margin-bottom:0.2em !important;}\", \"@media screen and (max-width:600px){.topbar.jsx-2979882152{display:none !important;}.topnav-page.jsx-2979882152{display:none !important;}#topnav-admin.jsx-2979882152{display:none !important;}.min-section.jsx-2979882152{margin-top:40px;}}\", \".commission-text.jsx-2979882152{padding:0px;margin:0px;}\"])));\n};\n\nexport default dashboard;\n\nconst changeStatus = async (token, id, amountReceive, amountToPay, currencyTo, currencyFrom, status) => {\n  const body = {\n    transaction: {\n      amountReceive,\n      amountToPay,\n      currencyTo,\n      currencyFrom,\n      status\n    }\n  };\n  const header = {\n    headers: {\n      'x-auth-token': token\n    }\n  };\n  const res = await Axios.put('https://api.moni.pe/api/operations/' + id, body, header);\n  return res.data;\n};\n\nconst get_all_transactions = async (token, page, limit) => {\n  const body = {};\n  const header = {\n    headers: {\n      'x-auth-token': token\n    }\n  };\n  const res = await Axios.get('https://api.moni.pe/api/operations' + '?page=' + page + '&limit=' + limit, header);\n  return res.data;\n};\n\nconst get_agent_transactions = async (token, id, page, limit) => {\n  const body = {};\n  const header = {\n    headers: {\n      'x-auth-token': token\n    }\n  };\n  const res = await Axios.get('https://api.moni.pe/api/operations/agent/' + id + '?page=' + page + '&limit=' + limit, header);\n  return res.data;\n};\n\nconst get_admin_commission = async token => {\n  const body = {};\n  const header = {\n    headers: {\n      'x-auth-token': token\n    }\n  };\n  const res = await Axios.get('https://api.moni.pe/api/operations/commission/admin', header);\n  return res.data;\n};\n\nconst get_agent_commission = async (token, id) => {\n  const body = {};\n  const header = {\n    headers: {\n      'x-auth-token': token\n    }\n  };\n  const res = await Axios.get('https://api.moni.pe/api/operations/commission/agent/' + id, header);\n  return res.data;\n};\n\nconst notification = () => {\n  const publicVapidKey = 'BBzxUnsSFfJls1TkK3_3EPsOrN3iI05ZjUvB8fc03Vezvh2Bo39c3oV-sT0_x-bYCEgPAMgvbeLqrDgHTxYsCAA'; // Check for service worker\n\n  if ('serviceWorker' in navigator) {\n    send().catch(err => console.error(err));\n  } // Register SW, Register Push, Send Push\n\n\n  async function send() {\n    // Register Service Worker\n    const register = await navigator.serviceWorker.register('/sw.js', {\n      scope: '/'\n    }); // Register Push\n\n    const subscription = await register.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n    }); // Send Push Notification\n\n    await fetch('http://localhost:5000/api/notifications/subscribe', {\n      method: 'POST',\n      body: JSON.stringify(subscription),\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  function urlBase64ToUint8Array(base64String) {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n\n    for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n\n    return outputArray;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}