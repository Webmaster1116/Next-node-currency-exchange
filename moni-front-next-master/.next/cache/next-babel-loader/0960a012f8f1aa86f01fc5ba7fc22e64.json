{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport Convertor from '../Convertor/Convertor';\nimport Cookies from 'js-cookie';\nimport ProfileView from './ProfileView2';\nimport AlertContext from '../../context/alert/alertContext';\nimport getAvailAgent from '../genericFunctions/getAvailAgent';\nimport getBankDetails from '../genericFunctions/getBankDetails';\nimport getAgentData from '../genericFunctions/getAgentData';\nimport getAgentAccounts from '../genericFunctions/getAgentAccounts';\nimport { useRouter } from 'next/router';\nimport postOperation from '../genericFunctions/postOperation';\nimport getProfile from '../genericFunctions/getProfile';\nimport sendMail from '../genericFunctions/sendMail';\nimport BankList from '../../Data/BankList';\nimport Alert from '../Alerts';\nimport Axios from 'axios';\nimport BankPopup from './BankPopup';\n\nconst getCompra = async () => {\n  const res = await Axios.get('https://api.moni.pe/api/exchange/calculate?originCurrency=USD&destinationCurrency=PEN&amount=1');\n  return res.data;\n};\n\nconst getVenta = async () => {\n  const res = await Axios.get('https://api.moni.pe/api/exchange/calculate?originCurrency=PEN&destinationCurrency=USD&amount=1');\n  return res.data;\n};\n\nconst getBpi = async () => {\n  const res = await Axios.get('https://api.coindesk.com/v1/bpi/currentprice.json');\n  return res.data;\n};\n\nconst NewOperation = props => {\n  const Router = useRouter();\n  const {\n    originAmount,\n    destinationAmount,\n    originCurrency,\n    destinationCurrency,\n    alert,\n    currencyType\n  } = Router.query;\n  const {\n    0: data13,\n    1: setData\n  } = useState({\n    soles: 3.5,\n    usd: 3.495,\n    savingsCompra: 0.008,\n    savingsVenta: 0.0045,\n    bpi: {\n      USD: {\n        rate_float: 9000\n      }\n    }\n  });\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(true);\n\n  const init5 = async () => {\n    const data4 = await getCompra();\n    const data2 = await getVenta();\n    const data3 = await getBpi(); // console.log(data4, data2, data3);\n\n    const body2 = {\n      soles: data4.rate,\n      usd: data2.rate,\n      savingsCompra: data4.ahorros,\n      savingsVenta: data2.ahorros,\n      bpi: data3.bpi\n    };\n    setData(body2);\n  };\n\n  useEffect(() => {\n    init5(); // console.log(data13, 'body');\n  }, []);\n  const {\n    0: showTransactionField,\n    1: setShowTransactionField\n  } = useState(false);\n  const alertContext = useContext(AlertContext);\n  const {\n    setAlert,\n    alerts\n  } = alertContext;\n  const {\n    0: exchangeRate,\n    1: setExchangeRate\n  } = useState(data13.soles); // data13.bpi.USD.rate_float\n\n  const {\n    0: fromCurrency,\n    1: setFromCurrency\n  } = useState(originCurrency || 'Soles');\n  const {\n    0: toCurrency,\n    1: setToCurrency\n  } = useState(destinationCurrency || 'Dollars');\n  const {\n    0: amount,\n    1: setAmount\n  } = useState(originAmount || 1);\n  const {\n    0: amountInFromCurrency,\n    1: setAmountInFromCurrency\n  } = useState(true);\n  const {\n    0: banks,\n    1: setBanks\n  } = useState([]);\n  const {\n    0: selectedBank,\n    1: setSelectedBank\n  } = useState('');\n  const {\n    0: receiveBank,\n    1: setReceiveBank\n  } = useState('');\n  const {\n    0: isBankSelected,\n    1: setIsBankSelected\n  } = useState(false);\n  const {\n    0: token,\n    1: setToken\n  } = useState(Cookies.get('token'));\n  const {\n    0: step,\n    1: setStep\n  } = useState('1');\n  const {\n    0: noBanks,\n    1: setNoBanks\n  } = useState(false);\n  const {\n    0: stepTitle,\n    1: setStepTitle\n  } = useState('Iniciar una nueva operación');\n  const stepData = ['Iniciar una nueva operación', 'Confirmar detalles del perfil', 'Confirme los detalles de su transacción'];\n  const {\n    0: isagentAvail,\n    1: setIsAgentAvail\n  } = useState(false);\n  const {\n    0: agent,\n    1: setAgent\n  } = useState('');\n  const {\n    0: agentProfile,\n    1: setAgentProfile\n  } = useState('');\n  const {\n    0: agentBanks,\n    1: setAgentBanks\n  } = useState('');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: commissionType,\n    1: setCommissionType\n  } = useState('Soles');\n  const {\n    0: commissionValue,\n    1: setCommissionValue\n  } = useState(0);\n  const {\n    0: operationNumber,\n    1: setOperationNumber\n  } = useState('');\n  const {\n    0: agentLoader,\n    1: setAgentLoader\n  } = useState(false);\n  const {\n    0: showBankList,\n    1: setShowBankList\n  } = useState(false);\n  const {\n    0: showBankList2,\n    1: setShowBankList2\n  } = useState(false);\n  const {\n    0: agentBank,\n    1: setAgentBank\n  } = useState('');\n  const {\n    0: userUpload,\n    1: setUserUpload\n  } = useState('');\n  const {\n    0: selectField,\n    1: setSelectField\n  } = useState(false);\n  const {\n    0: checkSelect,\n    1: setCheckSelect\n  } = useState(false);\n  const {\n    0: fileName,\n    1: setFileName\n  } = useState('Ningún archivo cargado');\n  const {\n    0: bankPopup,\n    1: setBankPopup\n  } = useState(false);\n  const {\n    0: currencyCheck,\n    1: setCurrencyCheck\n  } = useState(false); // function removeDuplicates(originalArray, prop) {\n  //   var newArray = [];\n  //   var lookupObject = {};\n  //   for (var i in originalArray) {\n  //     lookupObject[originalArray[i][prop]] = originalArray[i];\n  //   }\n  //   for (i in lookupObject) {\n  //     newArray.push(lookupObject[i]);\n  //   }\n  //   return newArray;\n  // }\n\n  const init = async () => {\n    try {\n      let bank = await getBankDetails(token);\n\n      if (bank.length === 0) {\n        setNoBanks(true);\n        window.location.href = '/bank';\n      } // bank = removeDuplicates(bank, \"bankName\");\n      // console.log(bank, 'BBB');\n\n\n      setBanks(bank);\n\n      if (receiveBank !== '' && receiveBank.currency !== toCurrency) {\n        // console.log(toCurrency, receiveBank.currency);\n        window.location.href = '/operation?alert=2&currencyType=' + toCurrency;\n      }\n\n      if (selectedBank === undefined || selectedBank === '') {\n        setSelectedBank(BankList[0]);\n      } //   setReceiveBank(bank[0]);\n\n\n      const getAgentList = await getAvailAgent(token);\n      const getAgent = getAgentList.filter(agent1 => agent1.online === true && agent1.enable === true); // console.log('agents', getAgent);\n\n      if (getAgent.length !== 0) {\n        // console.log('no of available', getAgent.length);\n        for (let index = 0; index < getAgent.length; index++) {\n          setAgent(getAgent[index]); // console.log(index, 'index');\n\n          const agentPro = await getAgentData(token, getAgent[index]._id); // console.log(agentPro);\n\n          setAgentProfile(agentPro);\n          const agentAcc = await getAgentAccounts(token, getAgent[index]._id); // console.log(agentAcc);\n\n          const acc1 = agentAcc.filter(acc => acc.bankName === selectedBank.name && acc.currency === fromCurrency && acc.balance); // console.log(selectedBank.short, 'sel');\n          // console.log(acc1);\n\n          if (acc1.length !== 0) {\n            setAgentBanks(acc1);\n            setAgentBank(acc1[0]); // console.log(acc1, 'agent avail');\n\n            setIsAgentAvail(true);\n            break;\n          }\n        }\n      } else {\n        setIsAgentAvail(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (alert == 3) {\n      setAlert('Algo salió mal. La operacion no pudo ser completada', 'danger');\n    }\n\n    if (alert == 2) {\n      setAlert('Agregue una cuenta bancaria de ' + currencyType + ' o seleccione un banco de ' + currencyType, 'danger');\n    }\n\n    init();\n  }, []);\n  useEffect(() => {\n    if (fromCurrency == 'Dollars' && toCurrency == 'Soles') {\n      setExchangeRate(data13.soles);\n    }\n\n    if (fromCurrency == 'Dollars' && toCurrency == 'Bitcoin') {\n      setExchangeRate(1 / data13.bpi.USD.rate_float);\n    }\n\n    if (fromCurrency == 'Dollars' && toCurrency == 'Dollars') {\n      setExchangeRate(1);\n    }\n\n    if (fromCurrency == 'Soles' && toCurrency == 'Soles') {\n      setExchangeRate(1);\n    }\n\n    if (fromCurrency == 'Soles' && toCurrency == 'Bitcoin') {\n      setExchangeRate(1 / data13.bpi.USD.rate_float * (1 / data13.soles));\n    }\n\n    if (fromCurrency == 'Soles' && toCurrency == 'Dollars') {\n      setExchangeRate(1 / data13.usd);\n    }\n\n    if (fromCurrency == 'Bitcoin' && toCurrency == 'Soles') {\n      setExchangeRate(data13.soles * data13.bpi.USD.rate_float);\n    }\n\n    if (fromCurrency == 'Bitcoin' && toCurrency == 'Bitcoin') {\n      setExchangeRate(1);\n    }\n\n    if (fromCurrency == 'Bitcoin' && toCurrency == 'Dollars') {\n      setExchangeRate(data13.bpi.USD.rate_float);\n    }\n  }, [fromCurrency, toCurrency]);\n  let toAmount, fromAmount;\n\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = Math.floor(amount * exchangeRate * 100) / 100;\n  } else {\n    toAmount = amount;\n    fromAmount = Math.floor(amount / exchangeRate * 100) / 100;\n  }\n\n  function handleFromAmountChange(e) {\n    // const re = /^[0-9\\b]+$/;\n    const re = /^[+-]?([0-9]+(\\.\\d{0,2})?|[.][0-9]+)$/;\n\n    if (e.target.value === '' || re.test(e.target.value)) {\n      setAmount(e.target.value);\n      setCommissionValue(e.target.value * 0.0006);\n      setAmountInFromCurrency(true);\n    }\n  }\n\n  function handleToAmountChange(e) {\n    // const re = /^[0-9\\b]+$/;\n    const re = /^[+-]?([0-9]+(\\.\\d{0,2})?|[.][0-9]+)$/;\n\n    if (e.target.value === '' || re.test(e.target.value)) {\n      setAmount(e.target.value);\n      setAmountInFromCurrency(false);\n    }\n  }\n\n  const handleStep = async e => {\n    e.preventDefault();\n\n    if (e.target.name === '2') {\n      // console.log('second step called');\n      setAgentLoader(true);\n    }\n\n    setStep(e.target.name);\n    setStepTitle(stepData[e.target.name - 1]);\n    await init();\n    setAgentLoader(false);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // if (fileName === \"El tamaño del archivo excede\") {\n    // } else {\n\n    setLoading(true);\n    const profile = await getProfile(token);\n    let savings = fromCurrency === 'Dollars' ? parseFloat(data13.savingsCompra * fromAmount).toFixed(2) : parseFloat(data13.savingsVenta * fromAmount).toFixed(2);\n    let exchange = fromCurrency === 'Dollars' ? parseFloat(data13.soles).toFixed(2) : parseFloat(data13.usd).toFixed(2);\n\n    try {\n      const res = await postOperation(token, profile, receiveBank, fromAmount, toAmount, fromCurrency, toCurrency, agent, commissionValue, commissionType, operationNumber, agentBank, savings, exchange, selectedBank.name, userUpload);\n\n      if (res.data) {\n        const transaction = {\n          fromAmount,\n          toAmount,\n          fromCurrency,\n          toCurrency\n        };\n        const id = res.data._id;\n        const {\n          agentEmail\n        } = res.data; // console.log('pro', token, profile, selectedBank, transaction);\n\n        await sendMail(token, profile.email, 'new', {\n          id,\n          profileDetails: profile,\n          bankDetails: {\n            selectedBank,\n            receiveBank\n          },\n          transaction: {\n            fromAmount,\n            toAmount,\n            fromCurrency,\n            toCurrency\n          },\n          agent,\n          agentBank: agentBanks[0],\n          agentEmail\n        }); // console.log(savings, exchange, 'e');\n        // console.log(res.data, 'res');\n\n        window.location.href = '/history';\n      } else window.location.href = '/operation?alert=3';\n    } catch (error) {\n      // console.log(error);\n      window.location.href = '/operation?alert=3';\n    }\n  };\n\n  if (loading === true) {\n    return __jsx(\"div\", {\n      className: \"page-loader\"\n    }, __jsx(\"div\", {\n      className: \"loader\"\n    }, \"Cargando...\"));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    id: \"top\",\n    className: \"jsx-3508008135\" + \" \" + 'page'\n  }, __jsx(\"section\", {\n    className: \"jsx-3508008135\" + \" \" + 'page-section bg-gray pb-10  pt-70'\n  }, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'relative container align-left'\n  }, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'row'\n  }, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-8'\n  }, __jsx(\"h3\", {\n    className: \"jsx-3508008135\" + \" \" + 'paso mt-30 mb-20'\n  }, \"Paso \", step, \"/3: \", __jsx(\"strong\", {\n    className: \"jsx-3508008135\"\n  }, stepTitle)))))), __jsx(\"section\", {\n    className: \"jsx-3508008135\" + \" \" + 'page-section pt-10 min-section'\n  }, __jsx(\"form\", {\n    className: \"jsx-3508008135\" + \" \" + 'form-normal'\n  }, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'container align-left'\n  }, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-9 col-xs-12 padding0'\n  }, __jsx(\"div\", {\n    style: {\n      height: 'auto'\n    },\n    className: \"jsx-3508008135\" + \" \" + 'tab-content tpl-minimal-tabs-cont align-left section-text'\n  }, bankPopup ? __jsx(BankPopup, {\n    setBankPopup: setBankPopup,\n    bankCurrency: receiveBank.currency,\n    toCurrency: toCurrency,\n    fromCurrency: fromCurrency\n  }) : '', __jsx(\"div\", {\n    id: \"mini-one\",\n    className: \"jsx-3508008135\" + \" \" + 'tab-pane fade active in'\n  }, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-6 col-xs-12 padding0'\n  }, __jsx(\"h5\", {\n    className: \"jsx-3508008135\" + \" \" + 'black bold mb-10'\n  }, \"\\xBFDesde qu\\xE9 banco nos env\\xEDas tu dinero?\"), __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-3508008135\"\n  }, __jsx(\"button\", {\n    onClick: e => {\n      e.preventDefault(); // console.log(e.target.value);\n\n      setShowBankList(!showBankList);\n    },\n    className: \"jsx-3508008135\" + \" \" + 'input-sm btn btn-border-w btn-input'\n  }, selectedBank.name, __jsx(\"i\", {\n    style: {\n      position: 'absolute',\n      right: '10%',\n      paddingTop: '2px'\n    },\n    className: \"jsx-3508008135\" + \" \" + 'fa fa-chevron-down orange'\n  })), showBankList ? __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'li-cust'\n  }, BankList.map((bank, index) => {\n    return __jsx(React.Fragment, {\n      key: index\n    }, __jsx(\"li\", {\n      style: {\n        zIndex: '1000'\n      },\n      onClick: e => {\n        e.preventDefault();\n        setSelectedBank(bank);\n        setShowBankList(!showBankList);\n      },\n      className: \"jsx-3508008135\" + \" \" + 'opt-custom'\n    }, bank.name || ' '));\n  })) : ''))), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-6 col-xs-12 padding0'\n  }, __jsx(\"h5\", {\n    className: \"jsx-3508008135\" + \" \" + 'black bold mb-10'\n  }, \"\\xBFEn qu\\xE9 cuenta deseas recibir tu dinero?\"), __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-3508008135\"\n  }, __jsx(\"button\", {\n    onClick: e => {\n      e.preventDefault(); // console.log(e.target.value);\n\n      setShowBankList2(!showBankList2);\n    },\n    className: \"jsx-3508008135\" + \" \" + 'input-sm btn btn-border-w btn-input'\n  }, receiveBank.nickname ? receiveBank.nickname : 'ningún banco seleccionado', __jsx(\"i\", {\n    style: {\n      position: 'absolute',\n      right: '10%',\n      paddingTop: '2px'\n    },\n    className: \"jsx-3508008135\" + \" \" + 'fa fa-chevron-down orange'\n  })), showBankList2 ? __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'li-cust'\n  }, banks.map((bank, index) => {\n    return __jsx(React.Fragment, {\n      key: index\n    }, __jsx(\"li\", {\n      style: {\n        zIndex: '1000'\n      },\n      onClick: e => {\n        e.preventDefault();\n        bank.currency === toCurrency ? setCurrencyCheck(true) : setCurrencyCheck(false);\n        setReceiveBank(bank);\n        setShowBankList2(!showBankList2);\n      },\n      className: \"jsx-3508008135\" + \" \" + 'opt-custom'\n    }, bank.nickname || ' '));\n  })) : ''))), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-12 col-xs-12 padding0 mt-10'\n  }, __jsx(\"hr\", {\n    className: \"jsx-3508008135\" + \" \" + 'gray'\n  })), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-12 col-xs-12 padding0'\n  }, __jsx(\"h6\", {\n    className: \"jsx-3508008135\" + \" \" + 'black mt-0'\n  }, \"Compra: \", __jsx(\"span\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold'\n  }, data13.soles), \" - Venta: \", __jsx(\"span\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold'\n  }, data13.usd)), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-9 col-xs-7 bg-white cambio-form-normal'\n  }, __jsx(\"h6\", {\n    className: \"jsx-3508008135\" + \" \" + 'align-left mb-0 mt-0 uppercase'\n  }, \"Env\\xEDas\"), __jsx(\"input\", {\n    type: \"number\",\n    name: \"name\",\n    id: \"name\",\n    value: fromAmount,\n    placeholder: \"0\",\n    maxLength: \"100\",\n    step: \".01\",\n    onChange: handleFromAmountChange,\n    className: \"jsx-3508008135\" + \" \" + 'input-md form-control-cambio bold'\n  })), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-2 col-xs-3 cambio-moneda-normal white bold align-left'\n  }, fromCurrency === 'Soles' ? 'Soles' : 'Dólares'), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-1 col-xs-2 cambio-btn-normal align-right'\n  }, __jsx(\"button\", {\n    onClick: e => {\n      e.preventDefault();\n\n      if (fromCurrency === 'Soles') {\n        setFromCurrency('Dollars');\n        setCommissionType('Dollars');\n      } else {\n        setFromCurrency('Soles');\n        setCommissionType('Soles');\n      }\n\n      if (toCurrency === 'Soles') {\n        setToCurrency('Dollars');\n      } else {\n        setToCurrency('Soles');\n      }\n\n      toCurrency !== receiveBank.currency ? setCurrencyCheck(true) : setCurrencyCheck(false);\n    },\n    className: \"jsx-3508008135\" + \" \" + 'btn btn-icon'\n  }, __jsx(\"i\", {\n    className: \"jsx-3508008135\" + \" \" + 'fa fa-refresh fa-2x white'\n  })))), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-sm-12 col-xs-12 padding0 mt-20'\n  }, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-9 col-xs-7 bg-white cambio-form-normal'\n  }, __jsx(\"h6\", {\n    className: \"jsx-3508008135\" + \" \" + 'align-left mb-0 mt-0 uppercase'\n  }, \"Recibes\"), __jsx(\"input\", {\n    type: \"number\",\n    name: \"name\",\n    id: \"name\",\n    value: toAmount,\n    placeholder: \"0\",\n    maxLength: \"100\",\n    step: \".01\",\n    onChange: handleToAmountChange,\n    className: \"jsx-3508008135\" + \" \" + 'input-md form-control-cambio bold'\n  })), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-2 col-xs-3 cambio-moneda-normal white bold align-left'\n  }, toCurrency === 'Soles' ? 'Soles' : 'Dólares'), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-1 col-xs-2 cambio-btn-normal align-right'\n  }, __jsx(\"button\", {\n    onClick: e => {\n      e.preventDefault();\n\n      if (toCurrency === 'Soles') {\n        setToCurrency('Dollars');\n      } else {\n        setToCurrency('Soles');\n      }\n\n      if (fromCurrency === 'Soles') {\n        setFromCurrency('Dollars');\n        setCommissionType('Dollars');\n      } else {\n        setFromCurrency('Soles');\n        setCommissionType('Soles');\n      }\n\n      toCurrency !== receiveBank.currency ? setCurrencyCheck(true) : setCurrencyCheck(false);\n    },\n    className: \"jsx-3508008135\" + \" \" + 'btn btn-icon'\n  }, __jsx(\"i\", {\n    className: \"jsx-3508008135\" + \" \" + 'fa fa-refresh fa-2x white'\n  })))), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-6 col-xs-6 align-left padding0 mb-0'\n  }, __jsx(\"h6\", {\n    className: \"jsx-3508008135\" + \" \" + 'black mt-10 mb-0'\n  }, \"Ahorro estimado:\", ' ', __jsx(\"span\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold'\n  }, fromCurrency === 'Soles' ? ' $ ' : ' S/. ', fromCurrency === 'Soles' ? parseFloat(data13.savingsVenta * fromAmount / data13.soles).toFixed(3) : parseFloat(data13.savingsCompra * fromAmount).toFixed(3)))), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-6 col-xs-6 align-right padding0 mb-0'\n  }, __jsx(\"h6\", {\n    className: \"jsx-3508008135\" + \" \" + 'black mt-10 mb-0'\n  }, \"Tipo de cambio usado:\", ' ', __jsx(\"span\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold'\n  }, fromCurrency === 'Dollars' ? data13.soles.toFixed(2) : data13.usd.toFixed(2)))), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-6 col-xs-12 padding0 mt-xs-20 mb-xs-20'\n  }), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-6 col-xs-12 padding0 mt-xs-20 mb-xs-20'\n  }, __jsx(\"a\", {\n    // href=\"\"\n    href: currencyCheck ? '#mini-two' : '',\n    \"data-toggle\": \"tab\",\n    name: \"2\",\n    \"aria-expanded\": \"false\",\n    style: !noBanks && receiveBank !== '' ? {\n      display: 'block'\n    } : {\n      display: 'none'\n    },\n    onClick: e => {\n      // console.log('receive..', receiveBank);\n      if (currencyCheck) {\n        // console.log(receiveBank.currency, toCurrency);\n        handleStep(e);\n      } else {\n        setBankPopup(true);\n        setCurrencyCheck(false);\n      }\n    },\n    className: \"jsx-3508008135\" + \" \" + 'btn btn-mod btn-color btn-large btn-circle'\n  }, \"Iniciar operaci\\xF3n\"), __jsx(\"h4\", {\n    style: noBanks ? {\n      display: 'block'\n    } : {\n      display: 'none'\n    },\n    className: \"jsx-3508008135\"\n  }, \"No tienes una cuenta en DIVISA para este banco. Agregue uno y luego contin\\xFAe\"))), __jsx(\"div\", {\n    id: \"mini-two\",\n    className: \"jsx-3508008135\" + \" \" + 'tab-pane fade'\n  }, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-12 padding0'\n  }, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'row'\n  }, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-4'\n  }, __jsx(\"h4\", {\n    className: \"jsx-3508008135\" + \" \" + ''\n  }, \"Detalles de operation\"), __jsx(\"h4\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold mb-0'\n  }, \" Banco origen:\"), __jsx(\"h4\", {\n    className: \"jsx-3508008135\"\n  }, selectedBank.short || ' ', \" \"), __jsx(\"h4\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold mb-0'\n  }, \" Banco destino:\"), __jsx(\"h4\", {\n    className: \"jsx-3508008135\"\n  }, receiveBank.bankShort || ' ', \" \"), __jsx(\"h4\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold mb-0'\n  }, \" Monto a enviar:\"), __jsx(\"h4\", {\n    className: \"jsx-3508008135\"\n  }, fromCurrency === 'Dollars' ? '$ ' : 'S./ ', ' ', parseFloat(fromAmount).toFixed(2).toLocaleString()), __jsx(\"h4\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold mb-0'\n  }, \" Monto a Recibir: \"), __jsx(\"h4\", {\n    className: \"jsx-3508008135\"\n  }, toCurrency === 'Dollars' ? '$ ' : 'S./ ', ' ', parseFloat(toAmount).toFixed(2).toLocaleString()), __jsx(\"h4\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold mb-0'\n  }, \" Tipo de cambio:\"), ' ', __jsx(\"h4\", {\n    className: \"jsx-3508008135\"\n  }), __jsx(\"h4\", {\n    className: \"jsx-3508008135\"\n  }, fromCurrency === 'Dollars' ? data13.soles : data13.usd, ' ')), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-8'\n  }, __jsx(\"h4\", {\n    className: \"jsx-3508008135\"\n  }, __jsx(\"p\", {\n    className: \"jsx-3508008135\" + \" \" + 'text-center'\n  }, \"Transfierce\", __jsx(\"span\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold'\n  }, ' ', fromCurrency === 'Dollars' ? '$ ' : 'S./ ', ' ', parseFloat(fromAmount).toFixed(2).toLocaleString(), ' ', \"DESDE TU BANCA POR INTERNET\"), ' ', \"a la cuenta indicada a continuaci\\xF3n\")), agentLoader ? // <div className=\"page-loader\">\n  __jsx(\"div\", {\n    style: {\n      marginTop: '20%'\n    },\n    className: \"jsx-3508008135\" + \" \" + 'loader'\n  }, \"Cargando...\") : // </div>\n  __jsx(React.Fragment, null, isagentAvail ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'row'\n  }, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-6'\n  }, __jsx(\"h4\", {\n    className: \"jsx-3508008135\" + \" \" + 'orange bold'\n  }, \"Banco\"), agentBanks[0].bankName || ' '), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-6'\n  }, __jsx(\"h4\", {\n    className: \"jsx-3508008135\" + \" \" + 'orange bold'\n  }, \"Tipo de cuenta\"), agentBanks[0].type + ' ' + agentBanks[0].currency), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-6'\n  }, __jsx(\"h4\", {\n    className: \"jsx-3508008135\" + \" \" + 'orange bold'\n  }, \"N\\xFAmero de cuenta\"), agentBanks[0].accountNumber || ' '), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-6'\n  }, __jsx(\"h4\", {\n    className: \"jsx-3508008135\" + \" \" + 'orange bold'\n  }, \"Titular de la cuenta\"), agentBanks[0].bankUser || ' ')), __jsx(\"div\", {\n    style: {\n      marginTop: '5em'\n    },\n    className: \"jsx-3508008135\" + \" \" + 'row'\n  }, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-6 col-xs-12 padding0 mt-xs-20 mb-xs-20 mt-30'\n  }, __jsx(\"button\", {\n    style: {\n      padding: '15px',\n      width: '100%'\n    },\n    // id=\"submit_btn\"\n    onClick: e => {\n      e.preventDefault();\n      window.location.reload();\n    },\n    className: \"jsx-3508008135\" + \" \" + 'btn btn-mod btn-border-w btn-large btn-circle'\n  }, \"Cancelar Operaci\\xF3n\")), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-6 col-xs-12 padding0 mt-xs-20 mb-xs-20 mt-30'\n  }, __jsx(\"a\", {\n    href: \"#mini-three\",\n    \"data-toggle\": \"tab\",\n    name: \"3\",\n    \"aria-expanded\": \"false\",\n    style: isagentAvail ? {\n      display: 'block',\n      padding: '15px',\n      width: '100%'\n    } : {\n      display: 'none'\n    },\n    onClick: handleStep,\n    className: \"jsx-3508008135\" + \" \" + 'btn btn-mod btn-color btn-large btn-circle'\n  }, \"Siguiente\")))) : 'Ningún agente disponible en este momento. Intenta nuevamente más tarde'))))), __jsx(\"div\", {\n    id: \"mini-three\" // style=\"\"\n    ,\n    className: \"jsx-3508008135\" + \" \" + 'tab-pane fade'\n  }, checkSelect ? __jsx(\"h5\", {\n    className: \"jsx-3508008135\" + \" \" + 'h-5 alert center text-center orange bold col-md-12'\n  }, \"*Seleccione un modo de verificaci\\xF3n y compl\\xE9telo\") : __jsx(\"h5\", {\n    className: \"jsx-3508008135\" + \" \" + ' col-md-12'\n  }), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-12 padding0'\n  }, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'final'\n  }, __jsx(React.Fragment, null, isagentAvail ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'row'\n  }, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-4'\n  }, __jsx(\"h4\", {\n    className: \"jsx-3508008135\" + \" \" + 'mb-0'\n  }, \"Detalles de operation\"), __jsx(\"h4\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold mb-0'\n  }, \" Banco origen:\"), __jsx(\"h4\", {\n    className: \"jsx-3508008135\"\n  }, selectedBank.short || ' '), __jsx(\"h4\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold mb-0'\n  }, \"Banco destino:\"), __jsx(\"h4\", {\n    className: \"jsx-3508008135\"\n  }, receiveBank.bankShort || ' ', \" \"), __jsx(\"h4\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold mb-0'\n  }, ' ', \"Monto a enviar:\"), __jsx(\"h4\", {\n    className: \"jsx-3508008135\"\n  }, fromCurrency === 'Dollars' ? '$ ' : 'S./ ', ' ', parseFloat(fromAmount).toFixed(2).toLocaleString()), __jsx(\"h4\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold mb-0'\n  }, ' ', \"Monto a Recibir: 5\"), __jsx(\"h4\", {\n    className: \"jsx-3508008135\"\n  }, toCurrency === 'Dollars' ? '$ ' : 'S./ ', ' ', parseFloat(toAmount).toFixed(2).toLocaleString()), __jsx(\"h4\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold mb-0'\n  }, ' ', \"Tipo de cambio:\"), ' ', __jsx(\"h4\", {\n    className: \"jsx-3508008135\"\n  }), __jsx(\"h4\", {\n    className: \"jsx-3508008135\"\n  }, fromCurrency === 'Dollars' ? data13.soles : data13.usd)), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-8'\n  }, __jsx(\"h4\", {\n    className: \"jsx-3508008135\"\n  }, __jsx(\"span\", {\n    className: \"jsx-3508008135\"\n  }, \"Luego de culminar la transferencia a la cuenta de neustro agente,\"), __jsx(\"span\", {\n    className: \"jsx-3508008135\"\n  }, \"necesitamos\", __jsx(\"span\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold'\n  }, ' ', \"verificar con el banco\", ' '), \"para poder enviarte\"), ' ', \"los\", __jsx(\"span\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold'\n  }, toCurrency === 'Dollars' ? ' $ ' : ' S/. ', parseFloat(toAmount).toFixed(2).toLocaleString()), ' ', \"a tu cuenta\"), __jsx(\"h4\", {\n    style: {\n      marginTop: '80px'\n    },\n    className: \"jsx-3508008135\" + \" \" + 'mt-30 bold'\n  }, __jsx(\"span\", {\n    className: \"jsx-3508008135\"\n  }, \"Seleccione un m\\xE9todo de verificaci\\xF3n:\")), __jsx(\"h4\", {\n    style: {\n      marginTop: '40px'\n    },\n    className: \"jsx-3508008135\" + \" \" + 'mt-30'\n  }, __jsx(\"span\", {\n    className: \"jsx-3508008135\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    style: {\n      marginRight: '10px'\n    },\n    name: \"group1\",\n    onClick: () => {\n      setSelectField('transactionNumber');\n      setUserUpload('');\n    },\n    className: \"jsx-3508008135\"\n  }), \"Escribe el n\\xFAmero de operac\\xEDon de tu transferencia bancaria:\", __jsx(\"input\", {\n    style: {\n      marginLeft: '30px',\n      minWidth: '300px'\n    },\n    placeholder: \"Numero de operac\\xEDon XXXX\",\n    value: operationNumber,\n    onChange: e => {\n      setOperationNumber(e.target.value);\n      setCheckSelect(false);\n    },\n    className: \"jsx-3508008135\" + \" \" + 'custom-input w-100'\n  })), __jsx(\"br\", {\n    className: \"jsx-3508008135\"\n  }), __jsx(\"span\", {\n    className: \"jsx-3508008135\" + \" \" + 'mt-30'\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    style: {\n      marginRight: '10px'\n    },\n    name: \"group1\",\n    onClick: () => {\n      setOperationNumber('');\n      setSelectField('image');\n    },\n    className: \"jsx-3508008135\"\n  }), \"Envianos una captura de pantalla:\"), __jsx(\"div\", {\n    style: {\n      marginLeft: '40px'\n    },\n    className: \"jsx-3508008135\" + \" \" + 'col-md-12 col-xs-12 padding0 mt-xs-20 mb-xs-20 mt-10 ml-30'\n  }, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'upload-btn-wrapper ml-30'\n  }, __jsx(\"button\", {\n    className: \"jsx-3508008135\" + \" \" + 'btn btn-mod btn-border-w btn-medium btn-circle ml-30'\n  }, \"Subir archivo\"), __jsx(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    accept: \"image/*\",\n    placeholder: \"file upload\",\n    onChange: async e => {\n      e.preventDefault();\n      setCheckSelect(false);\n      await setUserUpload(event.target.files[0]);\n      console.log('size:-', event.target.files[0].size);\n      event.target.files[0].size < 1000000 ? setFileName('Archivo subido') : setFileName('El tamaño del archivo excede'); // console.log('File', userUpload);\n    },\n    className: \"jsx-3508008135\" + \" \" + ''\n  }), __jsx(\"span\", {\n    className: \"jsx-3508008135\"\n  }, __jsx(\"h5\", {\n    className: \"jsx-3508008135\" + \" \" + 'orange bold mb-10'\n  }, __jsx(\"span\", {\n    className: \"jsx-3508008135\"\n  }, fileName))))))), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'text-center'\n  }, __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-4 col-xs-12 padding0 mt-xs-20 mb-xs-20 mt-30'\n  }, __jsx(\"button\", {\n    style: {\n      padding: '15px',\n      width: '100%'\n    },\n    onClick: e => {\n      e.preventDefault();\n      window.location.reload();\n    },\n    className: \"jsx-3508008135\" + \" \" + 'btn btn-mod btn-border-w btn-large btn-circle'\n  }, \"Cancelar Operaci\\xF3n\")), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-4 col-xs-12 padding0 mt-xs-20 mb-xs-20 mt-30'\n  }, __jsx(\"button\", {\n    style: {\n      padding: '15px',\n      width: '100%'\n    },\n    onClick: e => {\n      e.preventDefault();\n\n      if (selectField === 'image' && userUpload !== '') {\n        setLoading(true);\n        handleSubmit(e);\n      } else if (selectField === 'transactionNumber' && operationNumber !== '' && operationNumber.length >= 6) {\n        setLoading(true);\n        handleSubmit(e);\n      } else {\n        setCheckSelect(true);\n      }\n    },\n    className: \"jsx-3508008135\" + \" \" + 'btn btn-mod btn-color btn-large btn-circle'\n  }, \"Iniciar Operaci\\xF3n\"))))) : __jsx(\"h4\", {\n    className: \"jsx-3508008135\"\n  }, \"El agente no est\\xE1 disponible ahora por favor intente nuevamente despu\\xE9s de un tiempo\")))))), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-12'\n  })), __jsx(\"div\", {\n    className: \"jsx-3508008135\" + \" \" + 'col-md-3 col-xs-12 mb-xs-30'\n  }, __jsx(\"h5\", {\n    className: \"jsx-3508008135\" + \" \" + 'orange bold mb-10'\n  }, __jsx(\"i\", {\n    className: \"jsx-3508008135\" + \" \" + 'fa fa-clock-o fa-2x orange'\n  }), \" Tiempo estimado de espera\"), __jsx(\"h6\", {\n    className: \"jsx-3508008135\" + \" \" + 'black mb-10'\n  }, __jsx(\"span\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold'\n  }, \"- BCP e Interbank:\"), \" 20 Minutos\"), __jsx(\"h6\", {\n    className: \"jsx-3508008135\" + \" \" + 'morado bold mb-10'\n  }, \"(* Montos mayores USD $20,000 pueden demorar hasta 1 hora)\"), __jsx(\"h6\", {\n    className: \"jsx-3508008135\" + \" \" + 'black mb-20'\n  }, __jsx(\"span\", {\n    className: \"jsx-3508008135\" + \" \" + 'bold'\n  }, \"- Interbancario:\"), \" 24 horas d\\xEDa \\xFAtil\"), __jsx(\"h5\", {\n    className: \"jsx-3508008135\" + \" \" + 'orange bold mb-10'\n  }, __jsx(\"i\", {\n    className: \"jsx-3508008135\" + \" \" + 'fa  fa-comments-o fa-2x orange'\n  }), \" Horario de atenci\\xF3n\"), __jsx(\"h6\", {\n    className: \"jsx-3508008135\" + \" \" + 'black mb-10'\n  }, \"Lunes a Viernes de 9:00 am a 7:00 pm\", __jsx(\"br\", {\n    className: \"jsx-3508008135\"\n  }), \"S\\xE1bados de 11:00 am a 2:00 pm\"))))), __jsx(_JSXStyle, {\n    id: \"3508008135\"\n  }, [\"input[type='number'].jsx-3508008135::-webkit-inner-spin-button,input[type='number'].jsx-3508008135::-webkit-outer-spin-button{-webkit-appearance:none;-moz-appearance:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;margin:0;}\", \".custom-input.jsx-3508008135{border:none;border-bottom:solid;border-size:1px;border-width:1px;margin-top:20px;margin-bottom:20px;}\", \".custom-icon.jsx-3508008135{color:white;background:black;padding:5px;border-radius:10px;}\", \".section.jsx-3508008135{background:white;}\", \".min-section.jsx-3508008135{min-height:83vh;background:white;background-image:url('images/bkg-neutro.jpg');background-attachment:fixed;background-repeat:no-repeat;background-size:cover;}\", \".btn-icon.jsx-3508008135,.btn-icon.jsx-3508008135:hover{background:transparent !important;}\", \".final.jsx-3508008135{display:block;position:relative;color:#777;-webkit-text-decoration:none;text-decoration:none;padding:14px 20px;-webkit-transition:all 0.27s cubic-bezier(0,0,0.58,1);-moz-transition:all 0.27s cubic-bezier(0,0,0.58,1);-o-transition:all 0.27s cubic-bezier(0,0,0.58,1);-ms-transition:all 0.27s cubic-bezier(0,0,0.58,1);-webkit-transition:all 0.27s cubic-bezier(0,0,0.58,1);transition:all 0.27s cubic-bezier(0,0,0.58,1);color:#333;font-size:22px;font-weight:600;}\", \".custom-mt.jsx-3508008135{margin-top:20px !important;}\", \".opt-custom.jsx-3508008135{color:black !important;list-decoration:none;list-style-type:none;padding:5px;padding-left:25px;padding-right:13px;}\", \".opt-custom.jsx-3508008135:hover{background:orange !important;color:white !important;padding-top:2px;}\", \".li-cust.jsx-3508008135{position:absolute;z-index:1000;border-color:orange;border-style:solid;border-radius:15px;border-top-left-radius:10px;border-top-right-radius:10px;padding-top:7px;padding-bottom:7px;background:white;border-width:2px;min-width:100px;width:100%;cursor:pointer;}\", \".btn-input.jsx-3508008135{width:100%;height:50px;padding-left:25px;padding-right:13px;font-size:15px;border-radius:45px;color:#333;border:2px solid #e55729;border-top-color:rgb(229,87,41);border-right-color:rgb(229,87,41);border-bottom-color:rgb(229,87,41);border-left-color:rgb(229,87,41);border-top-color:rgb(229,87,41);border-right-color:rgb(229,87,41);border-bottom-color:rgb(229,87,41);border-left-color:rgb(229,87,41);text-transform:none;background:transparent;text-align:start;outline:none !important;}\", \"select.jsx-3508008135 option.jsx-3508008135:hover{background:orange !important;color:white !important;}\", \".upload-btn-wrapper.jsx-3508008135{position:relative;overflow:hidden;display:inline-block;}\", \".upload-btn-wrapper.jsx-3508008135 input[type='file'].jsx-3508008135{font-size:100px;position:absolute;left:0;top:0;opacity:0;}\", \".head-text-custom.jsx-3508008135{text-align:center;dislay:inline;margin:0px;padding:0px;float:right;width:70%;text-align:start;}\", \".alert.jsx-3508008135{margin:0;padding:10px;}\", \"input[type='number'].jsx-3508008135::-webkit-inner-spin-button,input[type='number'].jsx-3508008135::-webkit-outer-spin-button{-webkit-appearance:none;-moz-appearance:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;margin:0;}\", \"@media only screen and (max-width:480px){.cambio-moneda-normal.jsx-3508008135{height:78px;}.cambio-btn-normal.jsx-3508008135{height:78px;}}\"])));\n};\n\nexport default NewOperation;","map":null,"metadata":{},"sourceType":"module"}