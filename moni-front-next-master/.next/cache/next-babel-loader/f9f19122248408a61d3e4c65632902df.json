{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext } from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { Provider as LoginProvider } from \"../context/LoginContext\";\nimport { Provider as UserContext } from \"../context/UserContext\";\nimport { Provider as AdminProvider } from \"../context/AdminContext\";\nimport { Provider as AgentProvider } from \"../context/AgentContext\";\nimport AlertState from \"../context/alert/AlertState\";\nimport cookies from \"next-cookies\";\nimport Login from \"./login.js\";\nimport AdminLogin from \"./admin_login.js\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\nimport \"react-notifications/lib/notifications.css\"; // import \"../Style/Button.css\";\n// import \"../Style/Card.css\";\n// import \"../Style/Navbar.css\";\n// import \"../Style/Home.css\";\n// import \"../Style/Footer.css\";\n// import \"../Style/Features.css\";\n// import \"../Style/Convertor.css\";\n// import \"../Style/Contact.css\";\n// import \"../Style/Faq.css\";\n// import \"../Style/Banner.css\";\n// import \"../Style/Login.css\";\n// import \"../Style/Transfer.css\";\n// import \"../Style/Form.css\";\n// import \"../Style/Operation.css\";\n// import \"../Style/AdminSidenav.css\";\n// import \"../Style/Button.css\";\n// import \"../Style/Popup.css\";\n// import \"../Style/Alert.css\";\n\nimport \"../Style/css/style.css\";\nimport \"../Style/css/style-responsive.css\";\nimport \"../Style/css/animate.min.css\";\nimport \"../Style/css/font-awesome.min.css\";\nimport \"../Style/css/vertical-rhythm.min.css\";\nimport \"../Style/css/et-line.css\";\nimport \"../Style/css/popup.css\";\nimport \"../Style/css/dropdown.css\"; // import \"../Style/magnific-popup.css\";\n\nconst MyApp = ({\n  Component,\n  pageProps,\n  role\n}) => {\n  const router = useRouter();\n  let allowed = true; // if (router.pathname.startsWith(\"/admin/\") && role !== \"admin\") {\n  //   allowed = false;\n  // }\n  // if (router.pathname.startsWith(\"/login\") && !role) {\n  //   allowed = false;\n  // }\n  // if (router.pathname.startsWith(\"/operation\") && role !== \"user\") {\n  //   allowed = false;\n  // }\n\n  const ComponentToRender = allowed ? Component : Login;\n  return __jsx(AlertState, null, __jsx(AdminProvider, null, __jsx(AgentProvider, null, __jsx(LoginProvider, null, __jsx(UserContext, null, __jsx(ComponentToRender, pageProps))))));\n};\n\nMyApp.getInitialProps = async function (ctx) {\n  const appProps = await App.getInitialProps(ctx);\n  return _objectSpread(_objectSpread({}, appProps), {}, {\n    role: cookies(ctx).type || \"\"\n  });\n};\n\nexport default MyApp;","map":{"version":3,"sources":["E:/moni-front-next/pages/_app.js"],"names":["React","useContext","App","Head","useRouter","Provider","LoginProvider","UserContext","AdminProvider","AgentProvider","AlertState","cookies","Login","AdminLogin","MyApp","Component","pageProps","role","router","allowed","ComponentToRender","getInitialProps","ctx","appProps","type"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAQ,IAAIC,aAArB,QAA0C,yBAA1C;AACA,SAASD,QAAQ,IAAIE,WAArB,QAAwC,wBAAxC;AACA,SAASF,QAAQ,IAAIG,aAArB,QAA0C,yBAA1C;AACA,SAASH,QAAQ,IAAII,aAArB,QAA0C,yBAA1C;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,uDAAP;AACA,OAAO,2CAAP,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,wBAAP;AACA,OAAO,mCAAP;AACA,OAAO,8BAAP;AACA,OAAO,mCAAP;AACA,OAAO,sCAAP;AACA,OAAO,0BAAP;AACA,OAAO,wBAAP;AACA,OAAO,2BAAP,C,CACA;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KAAoC;AAChD,QAAMC,MAAM,GAAGd,SAAS,EAAxB;AACA,MAAIe,OAAO,GAAG,IAAd,CAFgD,CAGhD;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,QAAMC,iBAAiB,GAAGD,OAAO,GAAGJ,SAAH,GAAeH,KAAhD;AACA,SACE,MAAC,UAAD,QACE,MAAC,aAAD,QACE,MAAC,aAAD,QACE,MAAC,aAAD,QACE,MAAC,WAAD,QACE,MAAC,iBAAD,EAAuBI,SAAvB,CADF,CADF,CADF,CADF,CADF,CADF;AAaD,CA7BD;;AA+BAF,KAAK,CAACO,eAAN,GAAwB,gBAAgBC,GAAhB,EAAqB;AAC3C,QAAMC,QAAQ,GAAG,MAAMrB,GAAG,CAACmB,eAAJ,CAAoBC,GAApB,CAAvB;AACA,yCAAYC,QAAZ;AAAsBN,IAAAA,IAAI,EAAEN,OAAO,CAACW,GAAD,CAAP,CAAaE,IAAb,IAAqB;AAAjD;AACD,CAHD;;AAKA,eAAeV,KAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport App from \"next/app\";\r\nimport Head from \"next/head\";\r\nimport { useRouter } from \"next/router\";\r\nimport { Provider as LoginProvider } from \"../context/LoginContext\";\r\nimport { Provider as UserContext } from \"../context/UserContext\";\r\nimport { Provider as AdminProvider } from \"../context/AdminContext\";\r\nimport { Provider as AgentProvider } from \"../context/AgentContext\";\r\nimport AlertState from \"../context/alert/AlertState\";\r\nimport cookies from \"next-cookies\";\r\nimport Login from \"./login.js\";\r\nimport AdminLogin from \"./admin_login.js\";\r\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\r\nimport \"react-notifications/lib/notifications.css\";\r\n// import \"../Style/Button.css\";\r\n// import \"../Style/Card.css\";\r\n// import \"../Style/Navbar.css\";\r\n// import \"../Style/Home.css\";\r\n// import \"../Style/Footer.css\";\r\n// import \"../Style/Features.css\";\r\n// import \"../Style/Convertor.css\";\r\n// import \"../Style/Contact.css\";\r\n// import \"../Style/Faq.css\";\r\n// import \"../Style/Banner.css\";\r\n// import \"../Style/Login.css\";\r\n// import \"../Style/Transfer.css\";\r\n// import \"../Style/Form.css\";\r\n// import \"../Style/Operation.css\";\r\n// import \"../Style/AdminSidenav.css\";\r\n// import \"../Style/Button.css\";\r\n// import \"../Style/Popup.css\";\r\n// import \"../Style/Alert.css\";\r\n\r\nimport \"../Style/css/style.css\";\r\nimport \"../Style/css/style-responsive.css\";\r\nimport \"../Style/css/animate.min.css\";\r\nimport \"../Style/css/font-awesome.min.css\";\r\nimport \"../Style/css/vertical-rhythm.min.css\";\r\nimport \"../Style/css/et-line.css\";\r\nimport \"../Style/css/popup.css\";\r\nimport \"../Style/css/dropdown.css\";\r\n// import \"../Style/magnific-popup.css\";\r\n\r\nconst MyApp = ({ Component, pageProps, role }) => {\r\n  const router = useRouter();\r\n  let allowed = true;\r\n  // if (router.pathname.startsWith(\"/admin/\") && role !== \"admin\") {\r\n  //   allowed = false;\r\n  // }\r\n\r\n  // if (router.pathname.startsWith(\"/login\") && !role) {\r\n  //   allowed = false;\r\n  // }\r\n\r\n  // if (router.pathname.startsWith(\"/operation\") && role !== \"user\") {\r\n  //   allowed = false;\r\n  // }\r\n\r\n  const ComponentToRender = allowed ? Component : Login;\r\n  return (\r\n    <AlertState>\r\n      <AdminProvider>\r\n        <AgentProvider>\r\n          <LoginProvider>\r\n            <UserContext>\r\n              <ComponentToRender {...pageProps} />\r\n            </UserContext>\r\n          </LoginProvider>\r\n        </AgentProvider>\r\n      </AdminProvider>\r\n    </AlertState>\r\n  );\r\n};\r\n\r\nMyApp.getInitialProps = async function (ctx) {\r\n  const appProps = await App.getInitialProps(ctx);\r\n  return { ...appProps, role: cookies(ctx).type || \"\" };\r\n};\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}