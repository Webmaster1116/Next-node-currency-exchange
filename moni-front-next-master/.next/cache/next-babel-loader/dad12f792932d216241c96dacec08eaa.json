{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport Axios from 'axios';\nimport UserContext from '../../context/UserContext';\nimport Loader from '../Loader';\nimport Cookies from 'js-cookie';\nimport getProfile from '../genericFunctions/getProfile';\nimport getAllTransactions from '../genericFunctions/getAllTransactions';\nimport sendMail from '../genericFunctions/sendMail';\nimport loggedUser from '../genericFunctions/loggedUser';\nimport { confirmAlert } from 'react-confirm-alert';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nvar OperationHistory = function OperationHistory(props) {\n  var context = useContext(UserContext);\n  var token = Cookies.get('token');\n\n  var _useState = useState(''),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(''),\n      profileDetails = _useState2[0],\n      setProfileDetails = _useState2[1];\n\n  var init = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var id, user, profile;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return loggedUser(token);\n\n            case 2:\n              id = _context.sent;\n              user = {\n                user: {\n                  id: id\n                }\n              }; // console.log(user, 'xxxxxx');\n              // const data = await getAllTransactions(token, user);\n\n              _context.next = 6;\n              return getProfile(token);\n\n            case 6:\n              profile = _context.sent;\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function init() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    init();\n  }, []);\n\n  var handleSubmit = function handleSubmit(id, amountReceive, amountToPay, currencyTo, currencyFrom, status, operation) {\n    confirmAlert({\n      title: 'Confirmar para enviar',\n      message: '¿Estás seguro de que quieres hacer esto?',\n      buttons: [{\n        label: 'Si',\n        onClick: function () {\n          var _onClick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return changeStatus(token, id, amountReceive, amountToPay, currencyTo, currencyFrom, status);\n\n                  case 2:\n                    _context2.next = 4;\n                    return sendMail(token, operation.profileDetails.email, 'verify', operation);\n\n                  case 4:\n                    NotificationManager.info('Estado cambiado', 'Title here');\n                    init();\n\n                  case 6:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          function onClick() {\n            return _onClick.apply(this, arguments);\n          }\n\n          return onClick;\n        }()\n      }, {\n        label: 'No',\n        onClick: function onClick() {\n          return console.log('Haga clic en no');\n        }\n      }]\n    });\n  };\n\n  if (state === '') {\n    return __jsx(\"div\", {\n      className: \"form-container w-100\"\n    }, __jsx(Loader, null));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(NotificationContainer, null), __jsx(\"div\", {\n    className: \"jsx-136640067\" + \" \" + 'container main mt-5'\n  }, __jsx(\"div\", {\n    className: \"jsx-136640067\" + \" \" + 'row head'\n  }, __jsx(\"div\", {\n    className: \"jsx-136640067\" + \" \" + 'col-1'\n  }), __jsx(\"div\", {\n    className: \"jsx-136640067\" + \" \" + 'col-2'\n  }, \"Nombre del banco\"), __jsx(\"div\", {\n    className: \"jsx-136640067\" + \" \" + 'col-2'\n  }, \"N\\xFAmero de cuenta\"), __jsx(\"div\", {\n    className: \"jsx-136640067\" + \" \" + 'col-2'\n  }, \"Cuenta a pagar\"), __jsx(\"div\", {\n    className: \"jsx-136640067\" + \" \" + 'col-2'\n  }, \"Cantidad que recibir\\xE1s\"), __jsx(\"div\", {\n    className: \"jsx-136640067\" + \" \" + 'col-2'\n  }, \"Estado\")), __jsx(\"hr\", {\n    className: \"jsx-136640067\" + \" \" + 'hr'\n  }), state.map(function (operation, index) {\n    // console.log(operation);\n    return __jsx(React.Fragment, {\n      key: index\n    }, __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'row'\n    }, __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'col-1'\n    }, index + 1), __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'col-2'\n    }, operation.bankDetails.bankName), __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'col-2'\n    }, operation.bankDetails.accountNumber), __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'col-1'\n    }, operation.transaction.amountToPay), __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'col-1'\n    }, operation.transaction.currencyTo), __jsx(\"div\", {\n      style: {\n        overflow: 'hidden'\n      },\n      className: \"jsx-136640067\" + \" \" + 'col-1'\n    }, operation.transaction.amountReceive), __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'col-1'\n    }, operation.transaction.currencyFrom), operation.transaction.status === 'Pago pendiente' ? __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'col-1'\n    }, operation.transaction.status), __jsx(\"button\", {\n      onClick: function onClick() {\n        return handleSubmit(operation._id, operation.transaction.amountReceive, operation.transaction.amountToPay, operation.transaction.currencyTo, operation.transaction.currencyFrom, 'Cantidad recibida', operation);\n      },\n      className: \"jsx-136640067\" + \" \" + 'btn btn-dark'\n    }, \"verificar pago\")) : __jsx(\"div\", {\n      className: \"jsx-136640067\" + \" \" + 'col-2'\n    }, operation.transaction.status)), __jsx(\"hr\", {\n      className: \"jsx-136640067\"\n    }));\n  })), __jsx(_JSXStyle, {\n    id: \"136640067\"\n  }, [\"div.jsx-136640067{color:white;font-size:15px;}\", \".head.jsx-136640067 div.jsx-136640067{font-size:18px;}\", \"hr.jsx-136640067{background:white;}\", \".main.jsx-136640067{margin:0 auto;padding-top:80px;width:100%;height:120vh;color:white;}\", \".scrollbar.jsx-136640067{margin-left:30px;float:left;height:300px;max-height:600px;width:65px;background:#f5f5f5;overflow-y:scroll;margin-bottom:25px;}\", \"#style-3.jsx-136640067::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,0.3);background-color:#f5f5f5;}\", \"#style-3.jsx-136640067::-webkit-scrollbar{width:6px;background-color:#f5f5f5;}\", \"#style-3.jsx-136640067::-webkit-scrollbar-thumb{background-color:#000000;border-width:1px;}\"]));\n};\n\nexport default OperationHistory;\n\nvar changeStatus = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(token, id, amountReceive, amountToPay, currencyTo, currencyFrom, status) {\n    var body, header, res;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            body = {\n              transaction: {\n                amountReceive: amountReceive,\n                amountToPay: amountToPay,\n                currencyTo: currencyTo,\n                currencyFrom: currencyFrom,\n                status: status\n              }\n            };\n            header = {\n              headers: {\n                'x-auth-token': token\n              }\n            };\n            _context3.next = 4;\n            return Axios.put('https://api.moni.pe/api/operations/' + id, body, header);\n\n          case 4:\n            res = _context3.sent;\n            return _context3.abrupt(\"return\", res.data);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function changeStatus(_x, _x2, _x3, _x4, _x5, _x6, _x7) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}