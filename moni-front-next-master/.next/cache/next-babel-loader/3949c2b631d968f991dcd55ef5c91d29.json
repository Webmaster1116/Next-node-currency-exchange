{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport Reg from \"../components/Register/AgentRegister\";\nimport Navbar from \"../components/Admin/topNavbar\";\nvar emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nvar phoneRegex = RegExp(/^[0-9\\b]+$/);\n\nvar Register = /*#__PURE__*/function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      password: \"\",\n      email: \"\",\n      phone: \"\",\n      dni: \"\",\n      address: \"\",\n      companyName: \"\",\n      ruc: \"\",\n      bankName: \"BCP\",\n      nickname: \"\",\n      accountNumber: \"\",\n      type: \"savings\",\n      accountType: \"Personal\",\n      currency: \"Dollars\",\n      formErrors: {\n        name: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        password: \"\",\n        email: \"\",\n        phone: \"\",\n        dni: \"\",\n        address: \"\",\n        companyName: \"\",\n        ruc: \"\",\n        bankName: \"\",\n        nickname: \"\",\n        accountNumber: \"\",\n        type: \"\",\n        accountType: \"\",\n        currency: \"\"\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (input) {\n      return function (event) {\n        var value = event.target.value;\n\n        _this.setState(_defineProperty({}, input, value));\n\n        console.log(input, value);\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          step = _this$state.step,\n          formErrors = _this$state.formErrors;\n      var _this$state2 = this.state,\n          name = _this$state2.name,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          password = _this$state2.password,\n          email = _this$state2.email,\n          phone = _this$state2.phone,\n          dni = _this$state2.dni,\n          accountType = _this$state2.accountType,\n          address = _this$state2.address,\n          companyName = _this$state2.companyName,\n          ruc = _this$state2.ruc;\n      var values = {\n        name: name,\n        firstName: firstName,\n        lastName: lastName,\n        password: password,\n        email: email,\n        phone: phone,\n        dni: dni,\n        accountType: accountType,\n        address: address,\n        companyName: companyName,\n        ruc: ruc\n      };\n      return __jsx(React.Fragment, null, __jsx(Layout, null, __jsx(Reg, {\n        handleChange: this.handleChange,\n        values: values,\n        formErrors: formErrors,\n        setRegisterOn: this.props.setRegisterOn\n      })));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default Register;","map":null,"metadata":{},"sourceType":"module"}