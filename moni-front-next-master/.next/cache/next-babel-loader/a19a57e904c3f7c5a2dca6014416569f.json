{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport BankList from \"../Data/BankList\";\nimport ChooseProfile from \"../components/Register/chooseProfile\";\nimport PersonalReg from \"../components/Register/PersonalReg\";\nimport CompanyReg from \"../components/Register/CompanyReg\";\nvar emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nvar phoneRegex = RegExp(/^[0-9\\b]+$/);\n\nvar Register = function Register(props) {\n  var _useState = useState(false),\n      isAccountSelect = _useState[0],\n      setIsAccountSelect = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      profile = _useState2[0],\n      setProfile = _useState2[1];\n\n  var _useState3 = useState({\n    firstName: \"\",\n    secondName: \"\",\n    lastName: \"\",\n    password: \"\",\n    birthDate: \"\",\n    email: \"\",\n    phone: \"\",\n    nationality: \"Afghanistan\",\n    doctype: \"DNI\",\n    dni: \"\",\n    motherLastName: \"\",\n    bankName: \"BCP\",\n    nickname: \"\",\n    accountNumber: \"\",\n    type: BankList[0],\n    accountType: \"Personal\",\n    currency: \"Soles\",\n    profile: \"\",\n    formErrors: {\n      firstName: \"\",\n      secondName: \"\",\n      lastName: \"\",\n      password: \"\",\n      birthDate: \"\",\n      email: \"\",\n      phone: \"\",\n      nationality: \"\",\n      dni: \"\",\n      doctype: \"\",\n      motherLastName: \"\",\n      bankName: \"\",\n      nickname: \"\",\n      accountNumber: \"\",\n      type: \"\",\n      currency: \"\"\n    }\n  }),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var handleChange = function handleChange(input) {\n    return function (event) {\n      var value = event.target.value;\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, input, value)));\n    };\n  };\n\n  var step = state.step,\n      formErrors = state.formErrors;\n  var firstName = state.firstName,\n      secondName = state.secondName,\n      lastName = state.lastName,\n      password = state.password,\n      birthDate = state.birthDate,\n      email = state.email,\n      phone = state.phone,\n      nationality = state.nationality,\n      motherLastName = state.motherLastName,\n      dni = state.dni,\n      accountType = state.accountType,\n      doctype = state.doctype;\n  var values = {\n    firstName: firstName,\n    secondName: secondName,\n    lastName: lastName,\n    password: password,\n    birthDate: birthDate,\n    email: email,\n    phone: phone,\n    nationality: nationality,\n    motherLastName: motherLastName,\n    dni: dni,\n    accountType: accountType,\n    doctype: doctype\n  };\n\n  if (isAccountSelect === false) {\n    return __jsx(Layout, null, __jsx(ChooseProfile, {\n      setIsAccountSelect: setIsAccountSelect,\n      setProfile: setProfile\n    }));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Layout, null, __jsx(\"div\", {\n    className: \"page\",\n    id: \"top\"\n  }, __jsx(PersonalReg, {\n    handleChange: handleChange,\n    values: values,\n    formErrors: formErrors,\n    profile: profile\n  }))));\n};\n\nexport default Register;","map":null,"metadata":{},"sourceType":"module"}